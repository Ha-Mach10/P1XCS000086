<UserControl
	x:Class="P1XCS000086.Modules.CodeManagerView.Views.CodeRegister"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:local="clr-namespace:P1XCS000086.Modules.CodeManagerView.Views"
	xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:mahIcons="http://metro.mahapps.com/winfx/xaml/iconpacks"
	xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:prism="http://prismlibrary.com/"
	d:DesignHeight="1000"
	d:DesignWidth="1500"
	prism:ViewModelLocator.AutoWireViewModel="True"
	mc:Ignorable="d">

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Controls.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colors.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<Style x:Key="GroupBoxHeaderTmplate" TargetType="TextBlock">
				<Style.Setters>
					<Setter Property="FontSize" Value="14" />
					<Setter Property="Margin" Value="0,4,0,4" />
				</Style.Setters>
			</Style>
			<Style
				x:Key="GroupBoxTemplate"
				BasedOn="{StaticResource MahApps.Styles.GroupBox.VisualStudio}"
				TargetType="GroupBox">
				<Style.Setters>
					<Setter Property="Margin" Value="0,8,8,0" />
				</Style.Setters>
			</Style>
			<Style
				x:Key="ContentText"
				BasedOn="{StaticResource MahApps.Styles.TextBlock}"
				TargetType="TextBlock">
				<Style.Setters>
					<Setter Property="Margin" Value="4,8,0,4" />
				</Style.Setters>
			</Style>
			<Style
				x:Key="TextBoxTemplate"
				BasedOn="{StaticResource MahApps.Styles.TextBox}"
				TargetType="TextBox">
				<Style.Setters>
					<Setter Property="Margin" Value="4" />
				</Style.Setters>
			</Style>

			<Style
				x:Key="ReadOnlyTextBox"
				BasedOn="{StaticResource MahApps.Styles.TextBox.VisualStudio}"
				TargetType="TextBox">
				<Style.Setters>
					<Setter Property="IsReadOnly" Value="True" />
					<Setter Property="Height" Value="25" />
					<Setter Property="VerticalContentAlignment" Value="Center" />
					<Setter Property="BorderBrush" Value="White" />
					<Setter Property="BorderThickness" Value="1" />
				</Style.Setters>
			</Style>

			<Style
				x:Key="RadioSelectChangeStyle"
				BasedOn="{StaticResource MahApps.Styles.Button.Flat}"
				TargetType="RadioButton">
				<Style.Triggers>
					<Trigger Property="IsChecked" Value="True">
						<Setter Property="Foreground" Value="Black" />
						<Setter Property="Background" Value="#2196F3" />
					</Trigger>
					<Trigger Property="IsChecked" Value="False">
						<Setter Property="Foreground" Value="White" />
						<Setter Property="Background" Value="Transparent" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				x:Key="RegisterContentButton"
				TargetType="Button"
				BasedOn="{StaticResource MahApps.Styles.Button.VisualStudio}">
				<Style.Setters>
					<Setter Property="Height" Value="30"/>
					<Setter Property="Margin" Value="8"/>
				</Style.Setters>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition Width="25" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>

		<mah:SplitView
			Margin="4"
			DisplayMode="Inline"
			IsPaneOpen="{Binding IsPaneOc.Value, FallbackValue=True}"
			PaneBackground="{StaticResource MahApps.Brushes.Accent}">
			<mah:SplitView.Pane>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition />
					</Grid.RowDefinitions>
					
					<StackPanel>
						<Border
							Margin="0,8,8,8"
							BorderBrush="White"
							BorderThickness="1"
							CornerRadius="5">
							<StackPanel Margin="8" Orientation="Horizontal">
								<TextBlock Text="項目数：" />
								<TextBlock Margin="8,0,0,0" Text="{Binding RecordCount.Value}" />
							</StackPanel>
						</Border>
						<GroupBox Style="{StaticResource GroupBoxTemplate}">
							<GroupBox.Header>
								<TextBlock Style="{StaticResource GroupBoxHeaderTmplate}" Text="言語種別選択" />
							</GroupBox.Header>
							<ComboBox
								ItemsSource="{Binding LangTypes.Value}"
								SelectedIndex="-1"
								SelectedValue="{Binding SelectedLangType.Value}">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="SelectionChanged">
										<prism:InvokeCommandAction Command="{Binding LangTypeSelectionChanged}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</ComboBox>
						</GroupBox>
						<GroupBox Style="{StaticResource GroupBoxTemplate}">
							<GroupBox.Header>
								<TextBlock Style="{StaticResource GroupBoxHeaderTmplate}" Text="開発種別" />
							</GroupBox.Header>
							<ComboBox
								ItemsSource="{Binding DevTypes.Value}"
								SelectedIndex="{Binding SelectedIndexDevType.Value}"
								SelectedValue="{Binding SelectedDevType.Value}">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="SelectionChanged">
										<prism:InvokeCommandAction Command="{Binding DevTypeSelectionChanged}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</ComboBox>
						</GroupBox>

						<GroupBox Style="{StaticResource GroupBoxTemplate}">
							<GroupBox.Header>
								<TextBlock Style="{StaticResource GroupBoxHeaderTmplate}" Text="登録" />
							</GroupBox.Header>

							<StackPanel>
								<TextBlock Style="{StaticResource ContentText}" Text="開発名称" />
								<TextBox Style="{StaticResource TextBoxTemplate}" mah:TextBoxHelper.ClearTextButton="True" Text="{Binding DevelopName.Value}" />
								<TextBlock Style="{StaticResource ContentText}" Text="使用用途" />
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>

									<StackPanel Margin="4,4,4,4">
										<TextBlock Margin="0,0,0,4" Text="大分類" />
										<ComboBox
											mah:TextBoxHelper.ClearTextButton="True"
											ItemsSource="{Binding UseAppMajor.Value}"
											SelectedItem="{Binding SelectedUseAppMajor.Value}">
											<i:Interaction.Triggers>
												<i:EventTrigger EventName="SelectionChanged">
													<prism:InvokeCommandAction Command="{Binding UseAppMajorSelectionChanged}" />
												</i:EventTrigger>
											</i:Interaction.Triggers>
										</ComboBox>
									</StackPanel>
									<StackPanel Grid.Column="1" Margin="4,4,4,4">
										<TextBlock Margin="0,0,0,4" Text="範囲" />
										<ComboBox
											mah:TextBoxHelper.ClearTextButton="True"
											ItemsSource="{Binding UseAppRange.Value}"
											SelectedIndex="{Binding SelectedIndexUseAppRange.Value}"
											SelectedItem="{Binding SelectedUseAppRange.Value}" />
									</StackPanel>
								</Grid>
								<TextBlock Style="{StaticResource ContentText}" Text="UIフレームワーク" />
								<ComboBox
									Margin="4"
									mah:TextBoxHelper.ClearTextButton="True"
									ItemsSource="{Binding UiFramework.Value}"
									SelectedIndex="{Binding SelectedIndexUiFramework.Value}"
									SelectedValue="{Binding SelectedUiFramework.Value}" />
								<TextBlock Style="{StaticResource ContentText}" Text="説明" />
								<TextBox
									Height="60"
									AcceptsReturn="True"
									Style="{StaticResource TextBoxTemplate}"
									Text="{Binding Explanation.Value}"
									TextWrapping="Wrap"
									VerticalScrollBarVisibility="Auto" />
								<TextBlock Style="{StaticResource ContentText}" Text="適用" />
								<TextBox
									Height="60"
									AcceptsReturn="True"
									Style="{StaticResource TextBoxTemplate}"
									Text="{Binding Summary.Value}"
									TextWrapping="Wrap"
									VerticalScrollBarVisibility="Auto" />

								<Button
									Style="{StaticResource RegisterContentButton}"
									Command="{Binding RegistCodeNumber}">
									<Button.Content>
										<StackPanel Orientation="Horizontal">
											<TextBlock Margin="0,0,16,0" Text="登録" />
											<mahIcons:PackIconMaterial Kind="DatabaseArrowLeft" />
										</StackPanel>
									</Button.Content>
								</Button>
								<Button Style="{StaticResource RegisterContentButton}" Command="{Binding RegistCodeNumberAndCreateProject}">
									<Button.Content>
										<StackPanel Orientation="Horizontal">
											<TextBlock Margin="0,0,16,0" Text="登録・作成" />
											<mahIcons:PackIconMaterial Kind="DatabaseArrowLeft" />
											<mahIcons:PackIconMaterial Kind="Plus" Margin="8,0,8,0" Width="12"/>
											<mahIcons:PackIconBoxIcons Kind="RegularWindowAlt" />
										</StackPanel>
									</Button.Content>
								</Button>

							</StackPanel>
						</GroupBox>
					</StackPanel>
					<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Visible" Margin="0,8,8,0">
						<ItemsControl ItemsSource="{Binding ContextMenuItems}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Button
							Margin="0,0,8,8"
							Command="{Binding ItemCommand}"
							Content="{Binding Header}" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</ScrollViewer>
				</Grid>
			</mah:SplitView.Pane>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="20" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>

				<ToggleButton
					x:Name="PaneOC"
					Padding="0"
					Background="{StaticResource MahApps.Brushes.Background}"
					Foreground="White"
					IsChecked="{Binding IsPaneOc.Value}">
					<ToggleButton.Style>
						<Style BasedOn="{StaticResource MahApps.Styles.Button.Flat}" TargetType="ToggleButton">
							<Style.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Setter Property="Content" Value="{mahIcons:ForkAwesome Kind=AngleLeft}" />
								</Trigger>
								<Trigger Property="IsChecked" Value="False">
									<Setter Property="Content" Value="{mahIcons:ForkAwesome Kind=AngleRight}" />
								</Trigger>
							</Style.Triggers>
						</Style>
					</ToggleButton.Style>
				</ToggleButton>

				<Grid Grid.Column="1">
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="47" />
					</Grid.RowDefinitions>

					<DataGrid
						x:Name="ViewGrid"
						EnableColumnVirtualization="True"
						EnableRowVirtualization="True"
						GridLinesVisibility="Vertical"
						IsReadOnly="True"
						ItemsSource="{Binding Table.Value}"
						SelectionUnit="FullRow"
						VirtualizingPanel.IsVirtualizing="True"
						VirtualizingPanel.VirtualizationMode="Recycling">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="SelectionChanged">
								<prism:InvokeCommandAction Command="{Binding DataGridRowSelectionChanged}" CommandParameter="{Binding ElementName=ViewGrid, Path=SelectedItem}" />
							</i:EventTrigger>
						</i:Interaction.Triggers>
						<DataGrid.ContextMenu>
							<ContextMenu>
								<ItemsControl ItemsSource="{Binding ContextMenuItems, UpdateSourceTrigger=PropertyChanged}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<StackPanel />
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<MenuItem Command="{Binding ItemCommand}" Header="{Binding Header}" />
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</ContextMenu>
						</DataGrid.ContextMenu>
					</DataGrid>

					<material:Snackbar HorizontalAlignment="Stretch" IsActive="{Binding SnackbarIsActive.Value}">
						<material:SnackbarMessage
							ActionCommand="{Binding CloseSnackbar}"
							ActionContent="{mahIcons:Material Kind=Close}"
							Content="{Binding ResultMessage.Value}" />
					</material:Snackbar>

					<Border
						Grid.Row="2"
						Margin="0,8,0,0"
						Padding="0,8,0,0"
						BorderBrush="White"
						BorderThickness="0,1,0,0">
						<StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
							<RadioButton VerticalContentAlignment="Center" Style="{StaticResource RadioSelectChangeStyle}">
								<RadioButton.Content>
									<mahIcons:PixelartIcons Kind="List" />
								</RadioButton.Content>
							</RadioButton>
							<RadioButton VerticalContentAlignment="Center" Style="{StaticResource RadioSelectChangeStyle}">
								<RadioButton.Content>
									<mahIcons:PixelartIcons Kind="Grid" />
								</RadioButton.Content>
							</RadioButton>
						</StackPanel>
					</Border>

				</Grid>
			</Grid>
		</mah:SplitView>

		<ToggleButton
			x:Name="PropertyToggleButton"
			Grid.Column="1"
			IsChecked="True">
			<ToggleButton.Template>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Margin="0,8,0,0">
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>

						<Grid Grid.Row="1">
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>

							<mahIcons:PackIconForkAwesome
								x:Name="OpenRightSideArrow1"
								HorizontalAlignment="Center"
								Kind="AngleRight" />
							<TextBlock
								Grid.Row="1"
								Margin="0,8,0,8"
								HorizontalAlignment="Center"
								FontSize="12"
								Text="選択項目プロパティ">
								<TextBlock.LayoutTransform>
									<RotateTransform Angle="-90" />
								</TextBlock.LayoutTransform>
							</TextBlock>
							<mahIcons:PackIconForkAwesome
								x:Name="OpenRightSideArrow2"
								Grid.Row="2"
								HorizontalAlignment="Center"
								FontWeight="Normal"
								Kind="AngleRight" />
						</Grid>

						<ContentPresenter
							x:Name="PresenterOpenRight"
							Grid.RowSpan="3"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Opacity="0" />

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="OpenRightSideArrow1" Property="Kind" Value="AngleLeft" />
							<Setter TargetName="OpenRightSideArrow2" Property="Kind" Value="AngleLeft" />
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="OpenRightSideArrow1" Property="Kind" Value="AngleRight" />
							<Setter TargetName="OpenRightSideArrow2" Property="Kind" Value="AngleRight" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</ToggleButton.Template>
		</ToggleButton>

		<GroupBox
			Grid.Column="2"
			Width="350"
			Header="プロパティ"
			Visibility="{Binding Path=IsChecked, ElementName=PropertyToggleButton, Converter={StaticResource BooleanToVisibilityConverter}}">
			<ItemsControl ItemsSource="{Binding SelectedRowPropertyFieldItems, UpdateSourceTrigger=PropertyChanged}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Margin="8" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition />
							</Grid.RowDefinitions>

							<GroupBox Header="{Binding TextBlockValue, Mode=OneWay}">
								<TextBox
									Grid.Row="1"
									Style="{StaticResource ReadOnlyTextBox}"
									Text="{Binding TextBoxValue, Mode=OneWay}" />
							</GroupBox>
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</GroupBox>
	</Grid>
</UserControl>
